---

---

## Multinomial Logistic Regression

### Training Data

```{r}
#| label: multinomial-regression-setup
#| include: false
library(xmas3)
library(dplyr)
library(nnet)
library(magick)
set.seed(2023)
image_path <- here::here("training-tiles")
my_data <- 
  readr::read_csv(here::here("training-tiles","chromebook-image-classification.csv"))
colnames(my_data) <- c("image","class","time")
my_color_analysis <- color_analysis(my_data$image)
my_data <- bind_cols(my_data,my_color_analysis)
GataiVision <- nnet::multinom(class~.,data = my_data %>% select(-image,-time))
readr::write_rds(GataiVision, here::here("inst","vision-model.rds"))
```

### Verify Training Data

```{r}
#| echo: false
#| results: asis
purrr::walk(my_data$class |> as.character() |> unique(),~{
  
  cat(paste0("::: {#fig-tiles-",.x," layout-nrow=2}\n"))
  my_data |> filter(class==.x) |> pull(image) |>
    purrr::walk(~{
      cat("",paste0("![](","./training-tiles/",basename(.x),")"),"\n") 
    })
  cat("\n")
  cat("Used to train as: ",as.character(.x)," by GataiVision\n")
  cat(":::\n")
  
})
```


### Test on Rest Of Tiles

```{r}
#| echo: false
#| results: asis

my_tiles <- dir(here::here("training-tiles"),full.names = TRUE, pattern = ".png")


analysis <- color_analysis(my_tiles)
pred <- predict(GataiVision, newdata = analysis)
my_new_data <- data.frame(png = my_tiles, pred = pred) |>
  arrange(pred)

purrr::walk(my_new_data$pred |> as.character() |> unique(),~{
  
  cat(paste0("::: {#fig-tiles-",.x," layout-nrow=2}\n"))
  my_new_data |> filter(pred==.x) |> pull(png) |> 
    purrr::walk(~{
      cat("",paste0("![](","./training-tiles/",basename(.x),")"),"\n") 
    })
  cat("\n")
  cat("Classified as: ",as.character(.x)," by GataiVision\n")
  cat(":::\n")
})
```

